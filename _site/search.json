[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "ISSS608 Visual Analytics and Applications"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below use p_load of pacman package to check if tidyverse packages are installed in te environment, it will luanch it into R if it has been installed.\n\npacman::p_load(tidyverse)\npacman::p_load(ggplot2)\npacman::p_load(forcats)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\", show_col_types = FALSE)\n\n\n\n\n\nhist(exam_data$MATHS,\n     main = \"Histogram of Maths Exams Result\",\n     xlab = \"Score\",\n     xlim = c(0, 100),\n     ylab = \"Count\",\n     ylim = c(0, 80),\n     col = \"lightblue\",\n     freq = TRUE)\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS)) + \n  geom_histogram(bins = 10, \n                 boundary = 100, \n                 color = \"black\",\n                 fill = \"lightblue\") +\n  labs(title = \"Histogram of Exams Result\", \n       subtitle = \"Maths\",\n       x = \"Score\",\n       y = \"Count\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(binwidth = 2.5, dotsize = 0.5) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 color = \"black\",\n                 fill = \"lightblue\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"grey30\")+\n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density() + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot() +\n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot(notch = TRUE) + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot() +\n  geom_point(position = \"jitter\", size = 0.5) + \n  theme_bw()\n\n\n\n\n\n\n\n\n\nviolin plot is a hybrid of a box plot and a kernel density plot shows peaks in the data. it can visualize the distribution of numerical data.\nviolin plot depict summary statistics and the density of each variable. (source: https://mode.com/blog/violin-plot-examples)\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_violin() + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_violin(fill = \"lightblue\") +\n  geom_boxplot(alpha = 0.5) + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun = \"mean\",\n               colour = \"red\",\n               size = 4) + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\",\n             fun = \"mean\",\n             colour = \"red\",\n             size = 4) + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() +\n  # default method used for smooth is loess\n  # geom_smooth(linewidth = 0.5)\n  geom_smooth(linewidth = 0.5, method = lm) +\n  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) + \n  theme_bw()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n    facet_wrap(~ CLASS) + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n    facet_grid(cols = vars(CLASS)) + \n  theme_bw()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet",
    "title": "Hands-on Exercise 1",
    "section": "Working with facet",
    "text": "Working with facet\n\nWorking with facet: View Maths Exam Result by Gender and Class using facet_grid()\n\nggplot(data = exam_data, aes(y = MATHS, x = CLASS)) +\n  geom_boxplot() + \n    facet_grid(cols = vars(GENDER)) + \n      theme_bw()\n\n\n\n\n\n\nWorking with facet: View Maths Exam Result by Gender and Class using facet_grid()\n\nggplot(data = exam_data, aes(y = MATHS, x = CLASS)) +\n  geom_boxplot() + \n    facet_grid(rows = vars(GENDER)) +\n      theme_bw()\n\n\n\n\n\n\nWorking with facet: View Maths Exam Result by Gender and Class using facet_grid()\n\nggplot(data = exam_data, aes(y = MATHS, x = GENDER)) +\n  geom_boxplot() + \n    facet_grid(rows = vars(GENDER), cols = vars(CLASS)) +\n      theme_bw()\n\n\n\n\n\n\nView Race in Bar chart in vertical form\n\nggplot(data = exam_data, aes(x = RACE)) +\n  geom_bar() +\n    theme_bw()\n\n\n\n\n\n\nView Race in Bar chart in horizontal form\n\nggplot(data = exam_data, aes(x = RACE)) +\n  geom_bar() +\n  coord_flip() + \n  theme_bw()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1",
    "section": "Working with theme",
    "text": "Working with theme\n\nWorking with theme: View Race in Bar chart in horizontal form\n\np <- ggplot(data = exam_data, aes(x = RACE)) +\n      geom_bar() + \n      coord_flip()\np + theme(panel.background = element_rect(fill = \"lightblue\", colour = NULL))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#designing-data-drive-graphics-for-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#designing-data-drive-graphics-for-analysis",
    "title": "Hands-on Exercise 1",
    "section": "Designing Data-drive Graphics for Analysis",
    "text": "Designing Data-drive Graphics for Analysis\n\nDesigning Data-drive Graphics for Analysis - View Race in Bar chart in vertical form\n\npct_format = scales::percent_format(accuracy = .1)\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot((aes(x = RACE))) +\n  geom_bar() +\n  \n  geom_text(aes(label = sprintf('%d (%s)', ..count.., pct_format(..count.. / sum(..count..)))),\n            stat=\"count\",\n            nudge_y = 8 ) +\n  labs(title = \"No. of Pupils by Race in Exam Results\", y=\"No. of Pupils\") \n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nâ„¹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\n\nDesigning Data-drive Graphics for Analysis - View Race in Bar chart in vertical form\n\npct_format = scales::percent_format(accuracy = .1)\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot((aes(x = RACE))) +\n  geom_bar(aes(fill = RACE), show.legend = TRUE) +\n  \n  geom_text(aes(label = sprintf('%d (%s)', ..count.., pct_format(..count.. / sum(..count..)))),\n            stat=\"count\",\n            nudge_y = 8 ) +\n  labs(title = \"No. of Pupils by Race in Exam Results\", y=\"No. of Pupils\") \n\n\n\n\n\n\nDesigning Data-drive Graphics for Analysis - Adding mean and median lines on the histogram plot\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, color = \"black\", fill=\"lightblue\") +\n  geom_vline(xintercept = mean(exam_data$MATHS), linetype=\"dashed\", linewidth=1, colour=\"red\") + \n  geom_vline(xintercept = median(exam_data$MATHS), linetype=\"dashed\", linewidth=1, colour=\"black\") + \n  theme_bw()\n\n\n\n\n\n\nDesigning Data-drive Graphics for Analysis - Adding background to facet_grid()\n\nggplot(data = exam_data, aes(x = ENGLISH)) +\n  geom_histogram(data = exam_data[\"ENGLISH\"], bins = 20, fill=\"lightgrey\", alpha=0.5) +\n  geom_histogram(aes(fill=GENDER), col=\"black\", bins = 20) +\n    facet_grid(cols = vars(GENDER)) + \n      theme_bw()\n\n\n\n\n\n\nDesigning Data-drive Graphics for Analysis - fixed reference lines on scatterplot\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() + \n  geom_vline(xintercept = mean(50), linetype=\"dashed\", linewidth=1, colour=\"grey\") +\n  geom_hline(yintercept = mean(50), linetype=\"dashed\", linewidth=1, colour=\"grey\") + \n  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) + \n  theme_bw()\n\n\n\n\n\n\nDesigning Data-drive Graphics for Analysis - mean reference lines on scatterplot\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() + \n  geom_vline(xintercept = mean(exam_data$MATHS), linetype=\"dashed\", linewidth=1, colour=\"grey\") +\n  geom_hline(yintercept = mean(exam_data$ENGLISH), linetype=\"dashed\", linewidth=1, colour=\"grey\") +\n  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) + \n  theme_bw()"
  }
]